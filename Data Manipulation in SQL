Filtering your CASE statement:

1) Identify Bologna's team ID listed in the teams_italy table by selecting the team_long_name and team_api_id.
-- Select team_long_name and team_api_id from team
SELECT
	team_long_name,
	team_api_id
FROM teams_italy
-- Filter for team long name
WHERE team_long_name = 'Bologna';

Result:
team_long_name  |  team_api_id
Bologna         |  9857

2) Select the season and date that a match was played.
  *Complete the CASE statement so that only Bologna's home and away wins are identified.
 -- Select the season and date columns
SELECT 
	season,
	date,
    -- Identify when Bologna won a match
	CASE WHEN hometeam_id = 9857 
        AND home_goal > away_goal 
        THEN 'Bologna Win'
		WHEN awayteam_id = 9857 
        AND away_goal > home_goal 
        THEN 'Bologna Win' 
		END AS outcome
FROM matches_italy;

Result:
Season    |  date        |  outcome
2011/2012 |  2011-12-21  |  null
2011/2012 |  2011-12-20  |  null
2011/2012 |  2011-10-30  |  Bologna Win

3) Select the home_goal and away_goal for each match.
  *Use the CASE statement in the WHERE clause to filter all NULL values generated by the statement in the previous step.
-- Select the season, date, home_goal, and away_goal columns
SELECT 
	season,
    date,
	home_goal,
	away_goal
FROM matches_italy
WHERE 
-- Exclude games not won by Bologna
	CASE WHEN hometeam_id = 9857 AND home_goal > away_goal THEN 'Bologna Win'
		WHEN awayteam_id = 9857 AND away_goal > home_goal THEN 'Bologna Win'
END IS NOT NULL;

Result:

//CASE WHEN with aggregated Functions
Case Statements are great for
*Categorizing data
*Filtering data
*Aggregating data

CASE WHEN with COUNT
ex: SELECT season,
	COUNT(CASE WHEN hometown_id = 8650 AND home_goal > away_goal
		THEN 54321 END) AS home_wins,
	COUNT(CASE WHEN awayteam_id = 8650 AND away_goal > home_goal
		THEN 'Some random text' END) AS away_wins
FROM match
Group BY season;

Result:
Season     |  home_wins  |  away_wins
2011/2012  |  6          | 8
2012/2013  |  9          | 7

CASE WHEN with SUM
ex: SELECT season,
	SUM(CASE WHEN hometeam_id = 8650 
		THEN home_goal END) AS home_goals,
	SUM(CASE WHEN awayteam_id = 8650 
		THEN away_goal END) AS away_goals
FROM match
Group BY season;

Result:
Season     |  home_goals  |  away_goals
2011/2012  |  24          | 23
2012/2013  |  33          | 38

The CASE is fairly AVG
ex: SELECT season,
	AVG(CASE WHEN hometeam_id = 8650 
		THEN home_goal END) AS avg_homegoals,
	AVG(CASE WHEN awayteam_id = 8650 
		THEN away_goal END) AS avg_awaygoals
FROM match
Group BY season;

Result:
Season     |  avg_homegoals  |  avg_awaygoals
2011/2012  |  1.263          |  1.2105
2012/2013  |  1.736          |  2

A ROUNDed AVG(easy to read avg results)


	
